
bF = GF(9001)

R.<x0,x1,x2,x3>=PolynomialRing(bF,4)

AA.<t> = PolynomialRing(bF)
BB.<T> = PolynomialRing(AA)

FF.<x0,x1,x2,x3> = PolynomialRing(BB,4)

fR = FractionField(BB)
JJ.<T,t> = PolynomialRing(bF,2)

S.<x2,x3> = PolynomialRing(bF,2)

R1.<x2,x3,t,T> = PolynomialRing(bF,4)


u = x2

R2.<x0,x1,x2,x3,t,T> = PolynomialRing(bF,6)

k.<T> = PolynomialRing(bF)
k1.<t> = PolynomialRing(k)
K = FractionField(k);
A1.<t> = PolynomialRing(K) 



D = [2,1]
p = 2
q = 5
n = q-p+1


###################################################################

def star1(S,D):
    ld1 = listrandom(S, D, 2, 2, 3)

    I = []
    for m in range(D[0]):
	for t in (D[0]..2*D[0]-1):
	    I.append(ideal(ld1[m], ld1[t]))         

    for i in range(2*D[0]):
        if I[i].dimension() != 0: 
	    ld1 = listrandom(S, D, 2, 2, 3)

    if ideal(ld1[4], ld1[5]).dimension() !=0:
	ld1 = listrandom(S, D, 2, 2, 3)

    G = startmat(S,D,ld1,2,3)

    J = []
    for m in range(D[0]):
	for t in (2*D[0]..2*D[0]+D[1]-1):
	    J.append(ideal(ld1[m], ld1[t])) 

    for i in range(len(J)):
        if J[i].dimension() != 0: 
	    ld1 = listrandom(S, D, 2, 2, 3)

    return ld1,G


ld1,G = star1(S,D)

 #### zero-dim para components for 2*3 start matrix G ####



def condict(a): ##convert to dictionary
    S.<x2,x3>=PolynomialRing(bF,2)
    l11 = []
    for i in range(len(a)):
	l21 = []
	for j in range(2):
	    l21.append((a[i][0][S.gen(j)]))	    
	    #l21.append(k(a[0][0][S.gen(j)]))
	l11.append(l21)
    return l11




def ch(AA,S,D,ld1,G):  #### substart_00 = substart_02 = 0
    s11 = []   
    for m in range(D[0]):
	for t in (D[0]..2*D[0]-1):
	    s11.append(ideal(ld1[m], ld1[t]).variety()) 
    s1 = condict(s11)
    
    v = AA.lagrange_polynomial(s1)
    
    z = prod(x2 - s1[m][0] for m in range(len(s1)))
    w = x2.substitute(x2 = AA.gen(0))
    q = z.substitute(x2 = AA.gen(0))

    polelim11 = Matrix(R1,1,1)
    polelim11[0,0] = q

    polelim1 = polelim11[0,0]

    param1 = Matrix(R1,2,1)
    param1[0,0] = w
    param1[1,0] = v

    return param1, polelim1

a1 =  ch(AA,S,D,ld1,G)